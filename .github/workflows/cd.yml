name: CD

permissions:
  contents: write

on:
  push:
    branches:
        - main

  workflow_dispatch:
    inputs:
      ref:
        description: 'Commit SHA to run the workflow on'
        required: true
        default: 'main'

jobs:
  detect-version-change:
    name: Detect version change
    runs-on: ubuntu-latest
    outputs:
      current-version: ${{ steps.version-check.outputs.current-version }}
      log: ${{ steps.version-check.outputs.log }}
      next-version: ${{ steps.version-check.outputs.next-version }}
      release-notes: ${{ steps.version-check.outputs.release-notes }}
      version_changed: ${{ steps.version-change-detection.outputs.version_changed }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: brianbruggeman/semrel@main
        id: semrel

      - name: Try running semrel
        run: |
          echo "current-version: " $(./semrel show current)
          echo "next-version: " $(./semrel show next)

      - name: Check for version change
        id: version-check
        run: |
          if [ "${{ steps.semrel.outputs.next-version }}" != "${{ steps.semrel.outputs.current-version }}" ]; then
            echo "version-changed=true" >> $GITHUB_ENV
            echo "::set-output name=version-changed::true"
          else
            echo "version-changed=false" >> $GITHUB_ENV
            echo "::set-output name=version-changed::false"
          fi
          echo "RELEASE_NOTES=${{ steps.semrel.output.release-notes }}" >> $GITHUB_ENV
          echo "::set-output name=release-notes=$RELEASE_NOTES"
          echo "CURRENT_VERSION=${{ steps.semrel.output.current-version }}" >> $GITHUB_ENV
          echo "::set-output name=current-version=$CURRENT_VERSION"
          echo "NEXT_VERSION=${{ steps.semrel.output.next-version }}" >> $GITHUB_ENV
          echo "::set-output name=next-version=$NEXT_VERSION"
          echo "LOG=${{ steps.semrel.output.log }}" >> $GITHUB_ENV
          echo "::set-output name=log=$LOG"

  release:
    needs: detect-version-change
    if: ${{ needs.detect-version-change.outputs.version_changed == 'true' }}
    name: release ${{ matrix.config.target }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - {os: ubuntu-latest, bin_name: refresh, command: cargo, target: x86_64-unknown-linux-musl, cross: false}
          - {os: ubuntu-latest, bin_name: refresh, command: cargo, target: aarch64-unknown-linux-musl, cross: yes}
          # Macos
          - {os: macos-latest, bin_name: refresh, command: cargo, target: x86_64-apple-darwin, cross: false}
          - {os: macos-latest, bin_name: refresh, command: cargo, target: aarch64-apple-darwin, cross: false}
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: "Rust: Install toolchain"
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.config.target }}

      - name: "MUSL: Install musl-tools on Linux"
        if: ${{ contains(matrix.config.target, 'musl') && contains(matrix.config.target, 'linux') }}
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools

      - name: "Native: Build binary"
        if: ${{ matrix.config.cross == false }}
        run: cargo build --release --target=${{ matrix.config.target }}

      - name: "Cross Compile: Build binary"
        uses: actions-rs/cargo@v1
        if: ${{ matrix.config.cross }}
        with:
          use-cross: true
          command: build
          args: --release --target ${{matrix.config.target}}

      - name: Get tag version
        id: get_version
        run: echo "NEXT_VERSION=${{ needs.detect-version-change.outputs.next-version }}" >> $GITHUB_ENV

      - name: Pack binaries
        run: tar -C ./target/${{ matrix.config.target }}/release -czvf ${{ matrix.config.bin_name }}-${{ env.NEXT_VERSION }}-${{ matrix.config.target }}.tar.gz ${{ matrix.config.bin_name }}

      - name: Release binaries
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.config.bin_name }}-${{ env.VERSION }}-${{ matrix.config.target }}.*
          asset_name: ${{ matrix.config.bin_name }}-${{ env.VERSION }}-${{ matrix.config.target }}
          tag: ${{ needs.detect-version-change.outputs.version }}
          file_glob: true
          overwrite: true
