name: CD

permissions:
  contents: write

on:
  push:
    branches:
        - main

  workflow_dispatch:
    inputs:
      ref:
        description: 'Commit SHA to run the workflow on'
        required: true
        default: 'main'

jobs:
  detect-version-change:
    name: Detect version change
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version-change-detection.outputs.version_changed }}
      version: ${{ steps.version-detection.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List all tags
        run: |
          git tag || echo "No tags found"

      - name: Get latest tag version
        id: latest-tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "Version found: '${LATEST_TAG}'"

      - name: Get version from Cargo.toml
        id: version-detection
        run: |
          CARGO_VERSION=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "CARGO_VERSION=$CARGO_VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$CARGO_VERSION"
          echo "Application version found: '${CARGO_VERSION}'"

      - name: Compare versions
        id: version-change-detection
        run: |
          if [ "$CARGO_VERSION" != "$LATEST_TAG" ]; then
            echo "Version changed from '$LATEST_TAG' to '$CARGO_VERSION'"
            echo "::set-output name=version_changed::true"
          else
            echo "Version did not change"
            echo "::set-output name=version_changed::false"
          fi

  release:
    needs: detect-version-change
    if: ${{ needs.detect-version-change.outputs.version_changed == 'true' }}
    name: release ${{ matrix.config.target }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - {os: ubuntu-latest, bin_name: refresh, command: cargo, target: x86_64-unknown-linux-musl, cross: false}
          - {os: ubuntu-latest, bin_name: refresh, command: cargo, target: aarch64-unknown-linux-musl, cross: yes}
          # Macos
          - {os: macos-latest, bin_name: refresh, command: cargo, target: x86_64-apple-darwin, cross: false}
          - {os: macos-latest, bin_name: refresh, command: cargo, target: aarch64-apple-darwin, cross: false}
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: "Rust: Install toolchain"
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.config.target }}

      - name: "MUSL: Install musl-tools on Linux"
        if: ${{ contains(matrix.config.target, 'musl') && contains(matrix.config.target, 'linux') }}
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools

      - name: Cache Cargo
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ matrix.config.target}}-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}

      - name: "Native: Build binary"
        if: ${{ matrix.config.cross == false }}
        run: cargo build --release --target=${{ matrix.config.target }}

      - name: "Cross Compile: Build binary"
        uses: actions-rs/cargo@v1
        if: ${{ matrix.config.cross }}
        with:
          use-cross: true
          command: build
          args: --release --target ${{matrix.config.target}}

      - name: Get tag version
        id: get_version
        run: echo "VERSION=${{ needs.detect-version-change.outputs.version }}" >> $GITHUB_ENV

      - name: Pack binaries
        run: tar -C ./target/${{ matrix.config.target }}/release -czvf ${{ matrix.config.bin_name }}-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz ${{ matrix.config.bin_name }}

      - name: Release binaries
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.config.bin_name }}-${{ env.VERSION }}-${{ matrix.config.target }}.*
          asset_name: ${{ matrix.config.bin_name }}-${{ env.VERSION }}-${{ matrix.config.target }}
          tag: ${{ needs.detect-version-change.outputs.version }}
          file_glob: true
          overwrite: true
